Index: gcc/ada/mlib-tgt-specific.adb
===================================================================
--- gcc/ada/mlib-tgt-specific.adb.orig	Tue Jun 10 22:01:39 2008
+++ gcc/ada/mlib-tgt-specific.adb	Tue Jun 10 22:02:33 2008
@@ -3,11 +3,11 @@
 --                         GNAT COMPILER COMPONENTS                         --
 --                                                                          --
 --                    M L I B . T G T . S P E C I F I C                     --
---                          (Default empty version)                         --
+--                              (AVR Version)                               --
 --                                                                          --
 --                                 B o d y                                  --
 --                                                                          --
---                     Copyright (C) 2007, AdaCore                          --
+--          Copyright (C) 2002-2008, Free Software Foundation, Inc.         --
 --                                                                          --
 -- GNAT is free software;  you can  redistribute it  and/or modify it under --
 -- terms of the  GNU General Public License as published  by the Free Soft- --
@@ -24,14 +24,108 @@
 --                                                                          --
 ------------------------------------------------------------------------------
 
---  Default version
+--  This is the AVR version of the body.
 
 package body MLib.Tgt.Specific is
 
-   --  By default, libraries are not supported at all
+   --  Non default subprograms
+
+   procedure Build_Dynamic_Library
+     (Ofiles       : Argument_List;
+      Options      : Argument_List;
+      Interfaces   : Argument_List;
+      Lib_Filename : String;
+      Lib_Dir      : String;
+      Symbol_Data  : Symbol_Record;
+      Driver_Name  : Name_Id := No_Name;
+      Lib_Version  : String  := "";
+      Auto_Init    : Boolean := False);
+
+   function DLL_Ext return String;
+
+   function Dynamic_Option return String;
+
+   function PIC_Option return String;
+
+   function Library_Major_Minor_Id_Supported return Boolean;
+
+   function Standalone_Library_Auto_Init_Is_Supported return Boolean;
 
    function Support_For_Libraries return Library_Support;
-   --  Function indicating if libraries are supported
+
+   ---------------------------
+   -- Build_Dynamic_Library --
+   ---------------------------
+
+   procedure Build_Dynamic_Library
+     (Ofiles       : Argument_List;
+      Options      : Argument_List;
+      Interfaces   : Argument_List;
+      Lib_Filename : String;
+      Lib_Dir      : String;
+      Symbol_Data  : Symbol_Record;
+      Driver_Name  : Name_Id := No_Name;
+      Lib_Version  : String  := "";
+      Auto_Init    : Boolean := False)
+   is
+      pragma Unreferenced (Ofiles);
+      pragma Unreferenced (Options);
+      pragma Unreferenced (Interfaces);
+      pragma Unreferenced (Lib_Filename);
+      pragma Unreferenced (Lib_Dir);
+      pragma Unreferenced (Symbol_Data);
+      pragma Unreferenced (Driver_Name);
+      pragma Unreferenced (Lib_Version);
+      pragma Unreferenced (Auto_Init);
+
+   begin
+      null;
+   end Build_Dynamic_Library;
+
+   -------------
+   -- DLL_Ext --
+   -------------
+
+   function DLL_Ext return String is
+   begin
+      return "";
+   end DLL_Ext;
+
+   --------------------
+   -- Dynamic_Option --
+   --------------------
+
+   function Dynamic_Option return String is
+   begin
+      return "";
+   end Dynamic_Option;
+
+   --------------------------------------
+   -- Library_Major_Minor_Id_Supported --
+   --------------------------------------
+
+   function Library_Major_Minor_Id_Supported return Boolean is
+   begin
+      return False;
+   end Library_Major_Minor_Id_Supported;
+
+   ----------------
+   -- PIC_Option --
+   ----------------
+
+   function PIC_Option return String is
+   begin
+      return "";
+   end PIC_Option;
+
+   -----------------------------------------------
+   -- Standalone_Library_Auto_Init_Is_Supported --
+   -----------------------------------------------
+
+   function Standalone_Library_Auto_Init_Is_Supported return Boolean is
+   begin
+      return False;
+   end Standalone_Library_Auto_Init_Is_Supported;
 
    ---------------------------
    -- Support_For_Libraries --
@@ -39,9 +133,17 @@
 
    function Support_For_Libraries return Library_Support is
    begin
-      return None;
+      return Static_Only;
    end Support_For_Libraries;
 
 begin
+   Build_Dynamic_Library_Ptr := Build_Dynamic_Library'Access;
+   DLL_Ext_Ptr               := DLL_Ext'Access;
+   Dynamic_Option_Ptr        := Dynamic_Option'Access;
+   Library_Major_Minor_Id_Supported_Ptr :=
+                                Library_Major_Minor_Id_Supported'Access;
+   PIC_Option_Ptr            := PIC_Option'Access;
+   Standalone_Library_Auto_Init_Is_Supported_Ptr :=
+     Standalone_Library_Auto_Init_Is_Supported'Access;
    Support_For_Libraries_Ptr := Support_For_Libraries'Access;
 end MLib.Tgt.Specific;
--- gcc/ada/make.adb.orig	Thu Dec 13 10:45:44 2007
+++ gcc/ada/make.adb	Tue Jun 10 22:18:35 2008
@@ -5054,6 +5054,11 @@
                   --  Warn the user, if necessary, so that he is not surprized
                   --  that specific switches are not taken into account.
 
+                  if Opt.Verbose_Mode then
+                     Write_Str ("Init library build (RE1)");
+                     Write_Eol;
+                  end if;
+
                   declare
                      Defaults : constant Variable_Value :=
                        Prj.Util.Value_Of
@@ -5725,6 +5730,11 @@
                           (Proj1).Need_To_Build_Lib := False;
                      end loop;
                   end;
+
+                  if Opt.Verbose_Mode then
+                     Write_Str ("build library build (RE2)");
+                     Write_Eol;
+                  end if;
 
                   --  Build the libraries, if any need to be built
 
